<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.AddBookMapper">

        <!-- 주소록 전체 셀렉(개인/공유 공용) -->
        <select id="addBookList" resultType="AddBookVO" parameterType="map">
                SELECT 
                        manage_id, 
                        manage_display_name, 
                        manage_hp, 
                        manage_email, 
                        NVL(a.manage_remark, ' ') AS manage_remark, 
                        manage_company_name,
                        manage_official_name, 
                        manage_dept_name, 
                        manage_starred,
                        A.MANAGE_ADD_BOOK_ID,
                        NVL(b.add_book_id, '0') AS add_book_id, 
                        NVL(b.add_book_title, ' ') AS add_book_title, 
                        NVL(b.share_add_book_yn, '0') AS share_add_book_yn, 
                        a.emp_id AS emp_id
                FROM 
                        add_book_manage a
                LEFT OUTER JOIN 
                        add_book  b
                ON 
                        a.emp_id = b.emp_id
                        AND (b.add_book_id IN (
                                        SELECT REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) AS ADD_BOOK_ID
                                        FROM dual
                                        CONNECT BY REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) IS NOT NULL
                                ) OR b.add_book_id IS NULL)
                WHERE 
                        a.emp_id = #{empId}
                        AND (b.share_add_book_yn = '0' OR b.share_add_book_yn IS NULL)
                        AND (NOT b.add_book_id = '0' OR b.add_book_id IS NULL)
                        <if test="add_book_id != null">
                                <choose>
                                        <otherwise>
                                        AND A.MANAGE_ADD_BOOK_ID like '%' || #{add_book_id} || '%'
                                        </otherwise>
                                </choose>
                        </if>
                ORDER BY 
                        manage_id ASC
                
        </select>
        <select id="manageAddBookIdList" resultType="AddBookVO" parameterType="map">
                SELECT 
                        A.MANAGE_ADD_BOOK_ID
                FROM 
                        add_book_manage a
                WHERE 
                        a.emp_id = #{empId}
                ORDER BY 
                        manage_id ASC
        </select>
        <select id="addBookStarred" resultType="AddBookVO" parameterType="map">
                SELECT 
                        a.manage_id AS manage_id, 
                        a.manage_display_name AS manage_display_name, 
                        a.manage_hp AS manage_hp,  
                        a.manage_email AS manage_email, 
                        NVL(a.manage_remark, ' ') AS manage_remark, 
                        a.manage_company_name AS manage_company_name,
                        a.manage_official_name AS manage_official_name, 
                        a.manage_dept_name AS manage_dept_name,  
                        a.manage_starred AS manage_starred,
                        A.MANAGE_ADD_BOOK_ID,
                        NVL(b.add_book_id, '0') AS add_book_id, 
                        NVL(b.add_book_title, ' ') AS add_book_title, 
                        NVL(b.share_add_book_yn, '0') AS share_add_book_yn, 
                        a.emp_id AS emp_id,
                        s.manage_id AS share_manage_id,
                        s.emp_id AS share_emp_id
                FROM 
                        add_book_manage a
                LEFT OUTER JOIN 
                        add_book  b 
                ON 
                        a.emp_id = b.emp_id
                        AND (b.add_book_id IN (
                                        SELECT REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) AS ADD_BOOK_ID
                                        FROM dual
                                        CONNECT BY REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) IS NOT NULL
                                ) OR b.add_book_id IS NULL)
                LEFT OUTER JOIN
                        share_add_book s 
                ON 
                        a.manage_id = s.manage_id
                WHERE 
                        (s.emp_id = #{empId} OR a.emp_id = #{empId})
                        AND manage_starred = '1'
                ORDER BY 
                        manage_id ASC
        </select>

        <select id="addBookShare" resultType="AddBookVO" parameterType="map">
                SELECT 
                        a.manage_id AS manage_id, 
                        a.manage_display_name AS manage_display_name, 
                        a.manage_hp AS manage_hp,  
                        a.manage_email AS manage_email, 
                        NVL(a.manage_remark, ' ') AS manage_remark, 
                        a.manage_company_name AS manage_company_name,
                        a.manage_official_name AS manage_official_name, 
                        a.manage_dept_name AS manage_dept_name,  
                        a.manage_starred AS manage_starred,
                        A.MANAGE_ADD_BOOK_ID,
                        NVL(b.add_book_id, '0') AS add_book_id, 
                        NVL(b.add_book_title, ' ') AS add_book_title, 
                        NVL(b.share_add_book_yn, '0') AS share_add_book_yn, 
                        a.emp_id AS emp_id,
                        s.manage_id AS share_manage_id,
                        s.emp_id AS share_emp_id
                FROM 
                        add_book_manage a
                LEFT OUTER JOIN 
                        add_book  b 
                ON 
                        a.emp_id = b.emp_id
                        AND (b.add_book_id IN (
                                        SELECT REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) AS ADD_BOOK_ID
                                        FROM dual
                                        CONNECT BY REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) IS NOT NULL
                                ) OR b.add_book_id IS NULL)
                LEFT OUTER JOIN
                        share_add_book s 
                ON 
                        a.manage_id = s.manage_id
                WHERE 
                        s.emp_id = #{empId}
                        or a.emp_id = #{empId}  
                        AND s.manage_id IS NOT NULL
                        <if test="add_book_id != null">
                                <choose>
                                        <otherwise>
                                        AND A.MANAGE_ADD_BOOK_ID like '%' || #{add_book_id} || '%'
                                        </otherwise>
                                </choose>
                        </if>
                ORDER BY 
                        manage_id ASC
        </select>

        <!-- 주소록 그룹 셀렉(주소록 생성시 필요) -->
        <select id="addBookGroupSelect" resultType="AddBookVO" parameterType="map">
                SELECT 
                        a.add_book_id,
                        a.add_book_title,
                        a.share_add_book_yn,
                        a.emp_id
                FROM 
                        add_book a
                WHERE 
                        a.emp_id = #{empId}
                        and a.share_add_book_yn = '0'
        </select>

        <select id="shareAddBookGroupSelect" resultType="AddBookVO" parameterType="map">
                SELECT 
                        a.add_book_id,
                        MAX(a.add_book_title) AS add_book_title,
                        MAX(a.share_add_book_yn) AS share_add_book_yn,
                        MAX(a.emp_id) AS emp_id,
                        MAX(b.emp_id) AS share_emp_id
                FROM 
                        add_book a
                INNER JOIN 
                        share_add_book b ON a.add_book_id = b.add_book_id 
                where a.emp_id = #{empId} or b.emp_id = #{empId}
                GROUP BY 
                        a.add_book_id
        </select>

        <!-- 주소록 특정 검색 셀렉(개인/공유 공용) -->
        <select id="addBookSearch" resultType="AddBookVO" parameterType="map">
        SELECT 
                        manage_id, 
                        manage_display_name, 
                        manage_hp, 
                        manage_email, 
                        NVL(a.manage_remark, ' ') AS manage_remark, 
                        manage_company_name,
                        manage_official_name, 
                        manage_dept_name, 
                        manage_starred,
                        A.MANAGE_ADD_BOOK_ID,
                        NVL(b.add_book_id, '0') AS add_book_id, 
                        NVL(b.add_book_title, ' ') AS add_book_title, 
                        NVL(b.share_add_book_yn, '0') AS share_add_book_yn, 
                        a.emp_id AS emp_id
                FROM 
                        add_book_manage a
                LEFT OUTER JOIN 
                        add_book  b
                ON 
                        a.emp_id = b.emp_id
                        AND NOT b.share_add_book_yn = '1'
                        AND (b.add_book_id IN (
                                        SELECT REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) AS ADD_BOOK_ID
                                        FROM dual
                                        CONNECT BY REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) IS NOT NULL
                                ) OR b.add_book_id IS NULL)
                WHERE 
                        a.emp_id = #{empId}
                <if test="selectSearch != null">
                        <choose>
                                <when test="selectSearch == 'manage_display_name'">
                                AND manage_display_name LIKE '%' || #{searchText} || '%'
                                </when>
                                <when test="selectSearch == 'manage_hp'">
                                AND manage_hp LIKE '%' || #{searchText} || '%'
                                </when>
                                <when test="selectSearch == 'manage_official_name'">
                                AND manage_official_name LIKE '%' || #{searchText} || '%'
                                </when>
                                <when test="selectSearch == 'manage_dept_name'">
                                AND manage_dept_name LIKE '%' || #{searchText} || '%'
                                </when>
                                <when test="selectSearch == 'all'">
                                AND (
                                        manage_display_name LIKE '%' || #{searchText} || '%' OR
                                        manage_hp LIKE '%' || #{searchText} || '%' OR
                                        manage_official_name LIKE '%' || #{searchText} || '%' OR
                                        manage_dept_name LIKE '%' || #{searchText} || '%'
                                )
                                </when>
                        </choose>
                </if>
                ORDER BY manage_id ASC
        </select>

        <select id="addBookSearchStarred" resultType="AddBookVO" parameterType="map">
        SELECT 
                        manage_id, 
                        manage_display_name, 
                        manage_hp, 
                        manage_email, 
                        NVL(a.manage_remark, ' ') AS manage_remark, 
                        manage_company_name,
                        manage_official_name, 
                        manage_dept_name, 
                        manage_starred,
                        A.MANAGE_ADD_BOOK_ID,
                        NVL(b.add_book_id, '0') AS add_book_id, 
                        NVL(b.add_book_title, ' ') AS add_book_title, 
                        NVL(b.share_add_book_yn, '0') AS share_add_book_yn, 
                        a.emp_id AS emp_id
                FROM 
                        add_book_manage a
                LEFT OUTER JOIN 
                        add_book  b
                ON 
                        a.emp_id = b.emp_id
                        AND (b.add_book_id IN (
                                        SELECT REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) AS ADD_BOOK_ID
                                        FROM dual
                                        CONNECT BY REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) IS NOT NULL
                                ) OR b.add_book_id IS NULL)
                WHERE 
                        a.emp_id = #{empId}
                        AND manage_starred = '1'
                <if test="selectSearch != null">
                        <choose>
                                <when test="selectSearch == 'manage_display_name'">
                                AND manage_display_name LIKE '%' || #{searchText} || '%'
                                </when>
                                <when test="selectSearch == 'manage_hp'">
                                AND manage_hp LIKE '%' || #{searchText} || '%'
                                </when>
                                <when test="selectSearch == 'manage_official_name'">
                                AND manage_official_name LIKE '%' || #{searchText} || '%'
                                </when>
                                <when test="selectSearch == 'manage_dept_name'">
                                AND manage_dept_name LIKE '%' || #{searchText} || '%'
                                </when>
                                <when test="selectSearch == 'all'">
                                AND (
                                        manage_display_name LIKE '%' || #{searchText} || '%' OR
                                        manage_hp LIKE '%' || #{searchText} || '%' OR
                                        manage_official_name LIKE '%' || #{searchText} || '%' OR
                                        manage_dept_name LIKE '%' || #{searchText} || '%'
                                )
                                </when>
                        </choose>
                </if>
                ORDER BY manage_id ASC
        </select>

        <select id="addBookSearchShare" resultType="AddBookVO" parameterType="map"> <!-- 공유주소록  수정해야함 -->
        SELECT 
                        manage_id, 
                        manage_display_name, 
                        manage_hp, 
                        manage_email, 
                        NVL(a.manage_remark, ' ') AS manage_remark, 
                        manage_company_name,
                        manage_official_name, 
                        manage_dept_name, 
                        manage_starred,
                        A.MANAGE_ADD_BOOK_ID,
                        NVL(b.add_book_id, '0') AS add_book_id, 
                        NVL(b.add_book_title, ' ') AS add_book_title, 
                        NVL(b.share_add_book_yn, '0') AS share_add_book_yn, 
                        a.emp_id AS emp_id
                FROM 
                        add_book_manage a
                LEFT OUTER JOIN 
                        add_book  b
                ON 
                        a.emp_id = b.emp_id
                        AND (b.add_book_id IN (
                                        SELECT REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) AS ADD_BOOK_ID
                                        FROM dual
                                        CONNECT BY REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) IS NOT NULL
                                ) OR b.add_book_id IS NULL)
                WHERE 
                        a.emp_id = #{empId}
                        AND manage_starred = '1'
                <if test="selectSearch != null">
                        <choose>
                                <when test="selectSearch == 'manage_display_name'">
                                AND manage_display_name LIKE '%' || #{searchText} || '%'
                                </when>
                                <when test="selectSearch == 'manage_hp'">
                                AND manage_hp LIKE '%' || #{searchText} || '%'
                                </when>
                                <when test="selectSearch == 'manage_official_name'">
                                AND manage_official_name LIKE '%' || #{searchText} || '%'
                                </when>
                                <when test="selectSearch == 'manage_dept_name'">
                                AND manage_dept_name LIKE '%' || #{searchText} || '%'
                                </when>
                                <when test="selectSearch == 'all'">
                                AND (
                                        manage_display_name LIKE '%' || #{searchText} || '%' OR
                                        manage_hp LIKE '%' || #{searchText} || '%' OR
                                        manage_official_name LIKE '%' || #{searchText} || '%' OR
                                        manage_dept_name LIKE '%' || #{searchText} || '%'
                                )
                                </when>
                        </choose>
                </if>
                ORDER BY manage_id ASC
        </select>

        <!-- 주소록 추가 -->
        <insert id="addBookInsert" parameterType="java.util.Map">
                INSERT INTO add_book_manage(manage_id, manage_display_name, manage_hp, manage_email, 
                                            manage_remark, manage_company_name,manage_official_name, manage_dept_name, 
                                            manage_starred,manage_add_book_id,emp_id)
                VALUES(add_book_manage_seq.nextval, #{manage_display_name}, #{manage_hp}
                        , #{manage_email},#{manage_remark}, #{manage_company_name},#{manage_official_name}, #{manage_dept_name}
                        , 0,#{manage_add_book_id},#{empId})
        </insert>

        <update id="addBookUpdate" parameterType="map">
                UPDATE add_book_manage
                SET 
                        manage_display_name = #{manage_display_name},
                        manage_hp = #{manage_hp},
                        manage_email = #{manage_email},
                        manage_remark = #{manage_remark},
                        manage_company_name = #{manage_company_name},
                        manage_official_name = #{manage_official_name},
                        manage_dept_name = #{manage_dept_name},
                        manage_add_book_id = #{manage_add_book_id}
                WHERE emp_id = #{empId}
                and manage_id = #{manage_id}
        </update>
        <!-- 주소록 수정 -->
        <select id="addBookListUpdate" resultType="map" parameterType="map">
                SELECT 
                        manage_id, 
                        manage_display_name, 
                        manage_hp, 
                        manage_email, 
                        NVL(a.manage_remark, ' ') AS manage_remark, 
                        manage_company_name,
                        manage_official_name, 
                        manage_dept_name, 
                        manage_starred,
                        A.MANAGE_ADD_BOOK_ID,
                        NVL(b.add_book_id, '0') AS add_book_id, 
                        NVL(b.add_book_title, ' ') AS add_book_title, 
                        NVL(b.share_add_book_yn, '0') AS share_add_book_yn, 
                        a.emp_id AS emp_id
                FROM 
                        add_book_manage a
                LEFT OUTER JOIN 
                        add_book  b
                ON 
                        a.emp_id = b.emp_id
                        AND (b.add_book_id IN (
                                        SELECT REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) AS ADD_BOOK_ID
                                        FROM dual
                                        CONNECT BY REGEXP_SUBSTR(A.MANAGE_ADD_BOOK_ID, '[^#]+', 1, LEVEL) IS NOT NULL
                                ) OR b.add_book_id IS NULL)
                WHERE 
                        a.emp_id = #{empId}
                        AND a.manage_id = #{manage_id}
                ORDER BY 
                        manage_id ASC
        </select>
        
        <!-- 주소록 삭제 -->
        <delete id="addBookDelete" parameterType="java.util.List">
                DELETE FROM add_book_manage
                WHERE manage_id IN
                <foreach collection="list" item="item" open="(" separator="," close=")">
                #{item}
                </foreach>
        </delete>

        <!-- 주소록 그룹 추가(개인) -->
        <insert id="addBookGroupInsert" parameterType="java.util.Map">
                INSERT INTO add_book(add_book_id, add_book_title,share_add_book_yn,emp_id)
                VALUES(add_book_seq.nextval, #{insert_add_book_title}, 0, #{empId})
        </insert>

        <!-- 주소록 그룹 삭제(개인/공유 공용) -->

        <!-- 주소록 그룹 수정(개인/공유 공용) -->
        <update id="addBookGroupUpdate" parameterType="map">
                UPDATE add_book
                SET 
                        add_book_title = #{update_add_book_title}
                WHERE emp_id = #{empId}
                and add_book_id = #{add_book_id}
        </update>

        <select id="addBookGroupDoubleCheck" resultType="map" parameterType="map">
                SELECT COUNT(*) AS count
                FROM add_book
                WHERE add_book_title = #{add_book_title}  
        </select>

        <update id="addBookStarredUpdate" parameterType="map">
                UPDATE add_book_manage
                SET 
                        manage_starred = #{manage_starred}
                WHERE emp_id = #{empId}
                and manage_id = #{manage_id}
        </update>

        <insert id="addBookStarredInsert" parameterType="java.util.Map">
                INSERT INTO add_book_favorites(manage_id,emp_id)
                VALUES(#{manage_id}, #{empId})
        </insert>

        <delete id="addBookStarredDelete" parameterType="map">
                DELETE FROM add_book_favorites
                WHERE manage_id = #{manage_id}
        </delete>

        <delete id="addBookGroupDelete" parameterType="map">
                DELETE FROM add_book
                WHERE add_book_id = #{add_book_id}
        </delete>
        
        
</mapper>