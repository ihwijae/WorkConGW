<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.mapper.DutyMapper">

    <sql id="search">
        <if test="searchKeyword != null and searchKeyword != ''">
            <choose>
                <when test='searchCondition == "tcmn"'>
                    AND	(A.duty_board_title LIKE '%' || #{searchKeyword} || '%'
                    OR A.duty_board_content LIKE '%' || #{searchKeyword} || '%'
                    OR C.emp_name LIKE '%' || #{searchKeyword} || '%'
                    )
                </when>
                <when test='searchCondition == "t"'>
                    AND	A.duty_board_title LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test='searchCondition == "c"'>
                    AND	A.duty_board_content LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test='searchCondition == "m"'>
                    AND	C.emp_name LIKE '%' || #{searchKeyword} || '%'
                </when>
                <when test='searchCondition == "n"'>
                    AND	A.duty_board_id = #{searchKeyword}
                </when>
            </choose>
        </if>
        <if test="searchDeadline != null and searchDeadline != ''">
            AND TO_CHAR(A.duty_board_end_dt,'yyyyMMdd') <![CDATA[ = ]]> TO_CHAR(to_date(#{searchDeadline},'MM/DD/YYYY'),'yyyyMMdd')
        </if>
        <if test="searchState != null and searchState != ''">
            <choose>
                <when test='searchState == "Y"'>
                    AND sysdate <![CDATA[ < ]]> A.duty_board_end_dt
                </when>
                <when test='searchState == "N"'>
                    AND sysdate <![CDATA[ >= ]]> A.duty_board_end_dt
                </when>
            </choose>
        </if>
    </sql>

    <select id="selectDutyVO" parameterType="DutyVO" resultType="DutyVO">
        SELECT
            A.duty_board_id
             ,A.duty_board_title
             ,A.duty_board_content
             ,A.duty_board_readcnt
             ,A.duty_board_create_dt
             ,A.duty_board_update_dt
             ,A.duty_updater_id
             ,A.duty_board_end_dt
             ,A.emp_writer_id
             ,B.emp_name
        FROM duty A
                 JOIN emp B
                      ON A.emp_writer_id=B.emp_id
        WHERE A.duty_board_id = #{duty_Board_Id}
    </select>

    <update id="updateDutyByDeleteProject" parameterType="ProjectVO">
        UPDATE DUTY
        SET
            PROJECT_ID = null
          ,DUTY_BOARD_UPDATE_DT = sysdate
        WHERE
            PROJECT_ID = #{project_Id}
    </update>

    <select id="selectDutyList" parameterType="DutyVO" resultType="DutyVO">
        select D3.*
        from(
        select D2.*
        from(
        select rownum as seq, D1.*
        from(
        SELECT
        A.duty_board_id
        ,A.duty_board_title
        ,A.duty_board_content
        ,A.duty_board_readcnt
        ,A.duty_board_create_dt
        ,A.duty_board_update_dt
        ,A.duty_updater_id
        ,A.duty_board_end_dt
        ,A.emp_writer_id
        ,A.PROJECT_ID
        ,C.emp_name
        ,C.emp_id
        ,C.emp_picture
        ,B.attachCount
        ,NVL(D.reply_count,0) as replyCount
        ,(SELECT COUNT(EMP_ID)
        FROM EMP
        WHERE DEPT_ID IN (
        SELECT DEPT_ID
        FROM DUTY_RECEPTION
        WHERE DUTY_BOARD_ID = A.duty_board_id
        AND DEPT_ID IS NOT NULL
        )) dept_Cnt
        ,(SELECT COUNT(DUTY_BOARD_ID)
        FROM DUTY_RECEPTION
        WHERE DUTY_BOARD_ID = A.duty_board_id
        AND EMP_ID IS NOT NULL
        ) emp_Cnt
        FROM DUTY A
        LEFT OUTER JOIN (
        SELECT duty_board_id,
        COUNT(*) as attachCount
        FROM duty_attach
        GROUP BY duty_board_id
        ) B
        ON A.duty_board_id=B.duty_board_id
        JOIN emp C
        ON A.emp_writer_id=C.emp_id
        LEFT OUTER JOIN (
        SELECT duty_board_id,
        COUNT(*) AS reply_count
        FROM duty_reply
        GROUP BY duty_board_id
        ) D
        ON A.duty_board_id=D.duty_board_id
        WHERE 1=1
        AND (#{emp_Writer_Id} = EMP_WRITER_ID
        OR  #{emp_Writer_Id} IN (SELECT T1.EMP_ID
        FROM DUTY_ENFORCER T1
        WHERE T1.DUTY_BOARD_ID = A.duty_board_id)
        OR  #{emp_Writer_Id} IN (SELECT T2.EMP_ID
        FROM DUTY_RECEPTION T2
        WHERE T2.DUTY_BOARD_ID = A.duty_board_id
        AND T2.EMP_ID IS NOT NULL
        )
        OR   (SELECT DEPT_ID
        FROM EMP
        WHERE EMP_ID = #{emp_Writer_Id}) IN
        (SELECT T3.DEPT_ID
        FROM DUTY_RECEPTION T3
        WHERE T3.DUTY_BOARD_ID = A.duty_board_id
        AND T3.DEPT_ID IS NOT NULL)
        )
        <include refid="search" />
        ORDER BY A.duty_board_create_dt DESC
        ) D1
        ) D2
        where seq <![CDATA[ > ]]> #{firstIndex}
        ) D3
        where rownum <![CDATA[ <= ]]> #{recordCountPerPage}
    </select>

    <select id="selectDutyEnforcerList" parameterType="DutyVO" resultType="DutyEnforcerCommand">
        SELECT  A.emp_id
             ,A.emp_name
             ,A.emp_picture
             ,B.attend_st_name
             ,C.dept_name
             ,D.code_name as officialName
             ,E.duty_board_id
             ,E.read_st
        FROM emp A, attend_st B, dept C, code D, DUTY_ENFORCER E
        WHERE A.attend_st_id = B.attend_st_id(+)
          AND A.dept_id = C.dept_id(+)
          AND A.CODE_ID = D.code_id
          AND A.emp_id = E.emp_id
          AND duty_board_id = #{duty_Board_Id}
    </select>

    <select id="selectDutyListTotalCount" parameterType="DutyVO" resultType="int">
        SELECT
        COUNT(*)
        FROM duty A
        LEFT OUTER JOIN (
        SELECT duty_board_id,
        COUNT(*) as attachCount
        FROM duty_attach
        GROUP BY duty_board_id
        ) B
        ON A.duty_board_id=B.duty_board_id
        JOIN emp C
        ON A.emp_writer_id=C.emp_id
        LEFT OUTER JOIN (
        SELECT duty_board_id,
        COUNT(*) AS reply_count
        FROM duty_reply
        GROUP BY duty_board_id
        ) D
        ON A.duty_board_id=D.duty_board_id

        WHERE 1=1
        AND (#{emp_Writer_Id} = EMP_WRITER_ID
        OR  #{emp_Writer_Id} IN (SELECT T1.EMP_ID
        FROM DUTY_ENFORCER T1
        WHERE T1.DUTY_BOARD_ID = A.duty_board_id)
        OR  #{emp_Writer_Id} IN (SELECT T2.EMP_ID
        FROM DUTY_RECEPTION T2
        WHERE T2.DUTY_BOARD_ID = A.duty_board_id
        AND T2.EMP_ID IS NOT NULL
        )
        OR   (SELECT DEPT_ID
        FROM EMP
        WHERE EMP_ID = #{emp_Writer_Id}) IN
        (SELECT T3.DEPT_ID
        FROM DUTY_RECEPTION T3
        WHERE T3.DUTY_BOARD_ID = A.duty_board_id
        AND T3.DEPT_ID IS NOT NULL)
        )
        <include refid="search" />
    </select>

    <insert id="insertDuty" parameterType="DutyVO">
        <selectKey resultType="int" keyProperty="duty_Board_Id" order="BEFORE">
            SELECT duty_board_id_seq.nextval FROM dual
        </selectKey>
        INSERT INTO duty (
        duty_board_id
        ,duty_board_title
        ,duty_board_content
        ,duty_board_readcnt
        ,duty_board_create_dt
        ,duty_board_update_dt
        ,duty_updater_id
        <if test='duty_Board_End_Dt != null'>
            ,duty_board_end_dt
        </if>
        ,emp_writer_id
        <if test='project_Id != 0'>
        ,project_id
        </if>
        ) VALUES (
        #{duty_Board_Id}
        ,#{duty_Board_Title}
        ,#{duty_Board_Content}
        ,0
        ,sysdate
        ,sysdate
        ,#{duty_Updater_Id}
        <if test='duty_Board_End_Dt != null'>
            ,#{duty_Board_End_Dt}
        </if>
        ,#{emp_Writer_Id}
        <if test='project_Id != 0'>
        ,#{project_Id}
        </if>
        )
    </insert>

    <insert id="insertDutyEnforcer" parameterType="DutyEnforcerCommand">
        INSERT INTO DUTY_ENFORCER (
        duty_board_id
        ,emp_id
        ) VALUES (
        #{duty_Board_Id}
        ,#{emp_Id}
        )
    </insert>

    <insert id="insertDutyReceptioner" parameterType="DutyEnforcerCommand">
        INSERT INTO DUTY_RECEPTION (
        DUTY_BOARD_ID
        ,EMP_ID
        ) VALUES (
        #{duty_Board_Id}
        ,#{emp_Id}
        )
    </insert>

    <insert id="insertDutyFile" parameterType="DutyAttachVO">
        INSERT INTO duty_attach (
                                     attach_id
                                   ,attach_path
                                   ,attach_name
                                   ,attach_type
                                   ,attach_create_dt
                                   ,duty_board_id
        ) VALUES (
                   duty_attach_id_seq.nextval
                 ,#{attach_path}
                 ,#{attach_name}
                 ,#{attach_type}
                 ,sysdate
                 ,#{duty_Board_Id}
                 )
    </insert>

</mapper>